name: CI

on:
  pull_request:
    branches:
    - main
  push:
    branches:
    - main

jobs:
  validate:
    name: Validate
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.1.9
    - name: Initialise with no backend
      run: terraform init -backend=false
    - name: Check formatting
      run: terraform fmt -check -recursive
    - name: Validate the configuration
      run: terraform validate

  tflint:
    name: tflint
    runs-on: ubuntu-latest
    needs: [validate]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - uses: actions/cache@v3
        name: Cache plugin dir
        with:
          path: ~/.tflint.d/plugins
          key: ${{ runner.os }}-tflint
      - name: Setup TFLint
        uses: terraform-linters/setup-tflint@v2
        with:
          github_token: ${{ github.token }}
          tflint_version: latest
      - name: Run TFLint
        run: |
          tflint --init
          tflint -f compact

  tfsec:
    name: tfsec
    runs-on: ubuntu-latest
    needs: [validate]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: tfsec
        uses: aquasecurity/tfsec-action@v1.0.2
        with:
          github_token: ${{ github.token }}

  caller-identity-check:
    if: contains(github.event_name, 'pull_request')
    name: Return the IAM user
    needs: [validate, tflint, tfsec]
    permissions:
      contents: read
      id-token: write
    runs-on: ubuntu-latest
    steps:
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-region: ${{ secrets.AWS_REGION }}
        role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/github-actions
    - run: |
        aws sts get-caller-identity

  auto-approve:
    if: contains(github.event_name, 'pull_request')
    runs-on: ubuntu-latest
    needs: [validate, tflint, tfsec, caller-identity-check]
    steps:
    - name: Auto Approve PR
      uses: actions/github-script@v6
      with:
       github_token: ${{ github.token }}
       script: |
        github.rest.pulls.createReview({
          owner: context.repo.owner,
          repo: context.repo.repo,
          pull_number: context.issue.number,
          event: "APPROVE"
        })
